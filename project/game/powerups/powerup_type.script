-- Pre Hashing
local trigger = hash("trigger_response")

function init(self)
	--go.set_scale(vmath.vector3(1.2,1.2,1.2))
	self.hit = false
	self.respawn = 0

	math.randomseed(os.time())
	math.random()

	self.type = 1 --math.random(1,3)

	particlefx.play("#powerup_shine")

	-- Animate colours
	go.animate("#box", "tint.x", go.PLAYBACK_LOOP_PINGPONG, 0.75, go.EASING_LINEAR, 1)

	timer.delay(0.25, false, function()
		go.animate("#box", "tint.y", go.PLAYBACK_LOOP_PINGPONG, 0.75, go.EASING_LINEAR, 1)
	end)

	timer.delay(0.5, false, function()
		go.animate("#box", "tint.z", go.PLAYBACK_LOOP_PINGPONG, 0.75, go.EASING_LINEAR, 1)
	end)
end

function final(self)
	particlefx.stop("#powerup_shine")
end

function update(self, dt)
	if self.respawn > 0 then
		self.respawn = self.respawn - dt
		if self.respawn <= 0 then
			go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(1,1,1), go.EASING_INOUTELASTIC, 0.5)
			self.hit = false
			self.respawn = 0
			particlefx.play("#powerup_shine")
			self.type = 1 --math.random(1,3)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == trigger then
		if not self.hit then
			self.hit = true
			msg.post(message.other_id, "powerup",{type=self.type})
			go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(2,2,2), go.EASING_INOUTELASTIC, 0.25,0,
			function()
				self.respawn = 10
				particlefx.stop("#powerup_shine")
				go.animate(".", "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0,0,0), go.EASING_OUTCIRC, 0.01)
			end)
		end
	end
end
